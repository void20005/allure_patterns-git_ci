{"name": "test_decorator_steps", "status": "failed", "statusDetails": {"message": "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 4s, while waiting for:\nbrowser.element(('xpath', './/*[text()[contains(normalize-space(.), concat(\"\", \"#766\"))]]')).is visible\n\nReason: NoSuchElementException: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\".//*[text()[contains(normalize-space(.), concat(\"\", \"#766\"))]]\"}\n  (Session info: chrome=130.0.6723.119); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nScreenshot: file://C:\\Users\\Aliaksandr Rabau\\.selene\\screenshots\\1731850191917\\1731850191917.png\nPageSource: file://C:\\Users\\Aliaksandr Rabau\\.selene\\screenshots\\1731850191917\\1731850191917.html", "trace": "fn = <selene.core.conditions.ElementCondition object at 0x00000156721E8800>\n\n    def logic(fn: Callable[[E], R]) -> R:\n        finish_time = time.time() + self._timeout\n    \n        while True:\n            try:\n>               return fn(self.entity)\n\n.venv\\Lib\\site-packages\\selene\\core\\wait.py:119: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.venv\\Lib\\site-packages\\selene\\core\\condition.py:174: in __call__\n    return self._fn(entity)\n.venv\\Lib\\site-packages\\selene\\core\\condition.py:121: in fn\n    if not predicate(entity):\n.venv\\Lib\\site-packages\\selene\\core\\match.py:38: in <lambda>\n    'is visible', lambda element: element().is_displayed()\n.venv\\Lib\\site-packages\\selene\\core\\entity.py:192: in __call__\n    return self.locate()\n.venv\\Lib\\site-packages\\selene\\core\\entity.py:185: in locate\n    return self._locator()\n.venv\\Lib\\site-packages\\selene\\core\\locator.py:34: in __call__\n    return self._locate()\n.venv\\Lib\\site-packages\\selene\\core\\_browser.py:71: in <lambda>\n    Locator(f'{self}.element({by})', lambda: self.driver.find_element(*by)),\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:766: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000156721425A0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF73F95BD79]\\\\n\\\\tBaseThreadInitThunk [0x00007FFE45AB7374+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFE478DCC91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\".//*[text()[contains(normalize-space(.), concat(\"\", \"#766\"))]]\"}\nE         (Session info: chrome=130.0.6723.119); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF73FCCE1F5+2972373]\nE       \t(No symbol) [0x00007FF73F9655F0]\nE       \t(No symbol) [0x00007FF73F8057FA]\nE       \t(No symbol) [0x00007FF73F855A3E]\nE       \t(No symbol) [0x00007FF73F855D2C]\nE       \t(No symbol) [0x00007FF73F89EAB7]\nE       \t(No symbol) [0x00007FF73F87BABF]\nE       \t(No symbol) [0x00007FF73F89B8CC]\nE       \t(No symbol) [0x00007FF73F87B823]\nE       \t(No symbol) [0x00007FF73F8475E8]\nE       \t(No symbol) [0x00007FF73F848751]\nE       \tGetHandleVerifier [0x00007FF73FCF47BD+3129501]\nE       \tGetHandleVerifier [0x00007FF73FD44D00+3458528]\nE       \tGetHandleVerifier [0x00007FF73FD3B05D+3418429]\nE       \tGetHandleVerifier [0x00007FF73FAC687B+844123]\nE       \t(No symbol) [0x00007FF73F970AFF]\nE       \t(No symbol) [0x00007FF73F96C6D4]\nE       \t(No symbol) [0x00007FF73F96C86D]\nE       \t(No symbol) [0x00007FF73F95BD79]\nE       \tBaseThreadInitThunk [0x00007FFE45AB7374+20]\nE       \tRtlUserThreadStart [0x00007FFE478DCC91+33]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\n>   ???\n\nD:\\MyProjects\\QA GURU\\tests\\test_steps.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nD:\\MyProjects\\QA GURU\\tests\\test_steps.py:58: in check_issue_with_number\n    ???\n.venv\\Lib\\site-packages\\selene\\core\\entity.py:132: in should\n    self.wait.for_(condition)\n.venv\\Lib\\site-packages\\selene\\core\\wait.py:150: in for_\n    return self._decorator(self)(logic)(fn)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nfn = <selene.core.conditions.ElementCondition object at 0x00000156721E8800>\n\n    def logic(fn: Callable[[E], R]) -> R:\n        finish_time = time.time() + self._timeout\n    \n        while True:\n            try:\n                return fn(self.entity)\n            except Exception as reason:\n                if time.time() > finish_time:\n                    reason_string = '{name}: {message}'.format(\n                        name=reason.__class__.__name__,\n                        message=getattr(reason, \"msg\", str(reason)),\n                    )\n                    # TODO: think on how can we improve logging failures in selene, e.g. reverse msg and stacktrace\n                    # stacktrace = getattr(reason, 'stacktrace', None)\n                    # TODO: should we have an option to turn on stacktrace logging?\n                    timeout = self._timeout\n                    entity = self.entity\n    \n                    # if it's a normal function, it should have __qualname__,\n                    # then use it, otherwise use str(fn)\n                    fn_name = getattr(\n                        fn,\n                        '__qualname__',\n                        getattr(fn, '__str__', lambda: str(fn))(),\n                    )\n    \n                    failure = TimeoutException(\n                        f'\\n'\n                        f'\\nTimed out after {timeout}s, while waiting for:'\n                        f'\\n{entity}.{fn_name}'\n                        f'\\n'\n                        f'\\nReason: {reason_string}'\n                    )\n    \n>                   raise self._hook_failure(failure)\nE                   selene.core.exceptions.TimeoutException: Message: \nE                   \nE                   Timed out after 4s, while waiting for:\nE                   browser.element(('xpath', './/*[text()[contains(normalize-space(.), concat(\"\", \"#766\"))]]')).is visible\nE                   \nE                   Reason: NoSuchElementException: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\".//*[text()[contains(normalize-space(.), concat(\"\", \"#766\"))]]\"}\nE                     (Session info: chrome=130.0.6723.119); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE                   Screenshot: file://C:\\Users\\Aliaksandr Rabau\\.selene\\screenshots\\1731850191917\\1731850191917.png\nE                   PageSource: file://C:\\Users\\Aliaksandr Rabau\\.selene\\screenshots\\1731850191917\\1731850191917.html\n\n.venv\\Lib\\site-packages\\selene\\core\\wait.py:148: TimeoutException"}, "steps": [{"name": "Open the main page", "status": "passed", "start": 1731850203877, "stop": 1731850204551}, {"name": "Find repository 'eroshenkoam/allure-example'", "status": "passed", "parameters": [{"name": "repo", "value": "'eroshenkoam/allure-example'"}], "start": 1731850204551, "stop": 1731850204885}, {"name": "Follow the link 'eroshenkoam/allure-example'", "status": "passed", "parameters": [{"name": "repo", "value": "'eroshenkoam/allure-example'"}], "start": 1731850204885, "stop": 1731850205595}, {"name": "Open the Issues Tab", "status": "passed", "start": 1731850205595, "stop": 1731850205963}, {"name": "Check whether issue #76 is available", "status": "failed", "statusDetails": {"message": "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 4s, while waiting for:\nbrowser.element(('xpath', './/*[text()[contains(normalize-space(.), concat(\"\", \"#766\"))]]')).is visible\n\nReason: NoSuchElementException: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\".//*[text()[contains(normalize-space(.), concat(\"\", \"#766\"))]]\"}\n  (Session info: chrome=130.0.6723.119); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nScreenshot: file://C:\\Users\\Aliaksandr Rabau\\.selene\\screenshots\\1731850191917\\1731850191917.png\nPageSource: file://C:\\Users\\Aliaksandr Rabau\\.selene\\screenshots\\1731850191917\\1731850191917.html\n\n", "trace": "  File \"D:\\MyProjects\\Allure_patterns&git_ci\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"D:\\MyProjects\\QA GURU\\tests\\test_steps.py\", line 58, in check_issue_with_number\n  File \"D:\\MyProjects\\Allure_patterns&git_ci\\.venv\\Lib\\site-packages\\selene\\core\\entity.py\", line 132, in should\n    self.wait.for_(condition)\n  File \"D:\\MyProjects\\Allure_patterns&git_ci\\.venv\\Lib\\site-packages\\selene\\core\\wait.py\", line 150, in for_\n    return self._decorator(self)(logic)(fn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\MyProjects\\Allure_patterns&git_ci\\.venv\\Lib\\site-packages\\selene\\core\\wait.py\", line 148, in logic\n    raise self._hook_failure(failure)\n"}, "parameters": [{"name": "num", "value": "'766'"}], "start": 1731850205963, "stop": 1731850210148}], "start": 1731850203877, "stop": 1731850210150, "uuid": "7cf2d2ba-15ef-44e5-9b7b-56517925daf8", "historyId": "fd62217c3385a97c3b02a331591880c0", "testCaseId": "fd62217c3385a97c3b02a331591880c0", "fullName": "tests.test_steps#test_decorator_steps", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_steps"}, {"name": "host", "value": "Bear"}, {"name": "thread", "value": "17684-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_steps"}]}